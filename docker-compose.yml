version: "3.3"
services:
  lobster_db:
    image: postgres:12-alpine
    container_name: lobster-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - ./backend/db/postgres/postgres-data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    networks:
      - lobster
    restart: "on-failure"

  lobster_core:
    build: backend/core/.
    image: lobster/core:latest
    container_name: lobster-core
    env_file: backend/core/env_var
    environment:
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_DEFAULT_REGION=ap-south-1
      - secret='b9c8e5acc65e88f817ec58d94b9664cba1385a77a1a63c1e8fa8cd5e5c5852c2'
      - algorithm=HS256
    volumes:
      - ./backend/core:/app
      - ./backend/logs:/core/logs
      - ./backend/fidelius-cli-1.2.0:/app/fidelius-cli-1.2.0
    ports:
      - 8001:8000
    depends_on:
      - lobster_db
    networks:
      - lobster
    restart: "on-failure"

  lobster_mq:
    image: rabbitmq:3.12.0-rc.3-management-alpine
    container_name: lobster-mq
    ports:
      - 5671:5671
      - 4369:4369
      - 5672:5672
      - 15672:15672
    networks:
      - lobster
    restart: "on-failure"

  lobster_flower:
    image: mher/flower:0.9.7
    container_name: lobster-flower
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@lobster_mq
      - FLOWER_PORT=8888
    ports:
      - 8889:8888
    networks:
      - lobster
    depends_on:
      - lobster_mq

  lobster_ui:
    container_name: lobster-ui
    build:
      context: frontend
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    volumes:
      - ./frontend/src:/app/src
    networks:
      - lobster
    restart: "on-failure"

networks:
  lobster:
    name: lobster-network
